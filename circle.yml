machine:
  services:
    - postgresql
  environment:
    DATABASE_NAME: "circle_test"
    DATABASE_USERNAME: "ubuntu"
    DATABASE_PASSWORD: ""
dependencies:
  cache_directories:
      - "vendor"
  override:
      - sudo rm -rf /usr/local/go
      - wget "https://godeb.s3.amazonaws.com/godeb-amd64.tar.gz"
      - tar -xvf "godeb-amd64.tar.gz"
      - ./godeb install 1.5.2
      - go version
      - wget "https://github.com/Masterminds/glide/releases/download/0.8.3/glide-0.8.3-linux-amd64.tar.gz"
      - tar -xvf "glide-0.8.3-linux-amd64.tar.gz"
      - mv linux-amd64/glide glide
      - ./glide install
      - go build
test:
  override:
      - case $CIRCLE_NODE_INDEX in 0) go test  ./controllers/ ./controllers/socket/internal/handler/ -v -race ;; 1) go test -v -race ./models/... ./database/... ./helpers/... ./config/... ./rpc/... ;; esac:
          parallel: true
deployment:
  master:
    branch: master
    commands:
      - mkdir binaries
      - cp lobbySettingsData.json binaries/lobbySettingsData.json
      - go build -o binaries/helen-prod *.go
      - cp binaries/helen-prod $CIRCLE_ARTIFACTS/helen 
      - rsync -rl -e "ssh -p $SSH_PORT" binaries/* $BACKEND_USER@tf2stadium.com:$BACKEND_DEPLOY_PATH_PROD
      - ssh -p $SSH_PORT $BACKEND_USER@tf2stadium.com $BACKEND_DEPLOY_SCRIPT_PROD
  dev:
    branch: dev
    commands:
      - mkdir binaries
      - cp lobbySettingsData.json binaries/lobbySettingsData.json
      - go build -race -o binaries/helen-dev *.go
      - cp binaries/helen-dev $CIRCLE_ARTIFACTS/helen
      - rsync -rl -e "ssh -p $SSH_PORT" binaries/* $BACKEND_USER@tf2stadium.com:$BACKEND_DEPLOY_PATH_DEV
      - ssh -p $SSH_PORT $BACKEND_USER@tf2stadium.com $BACKEND_DEPLOY_SCRIPT_DEV
      - sh -ex cover.sh
